FORM-APP:
A simple log in, do stuff, log out app.

Current features include:
  1. Signing up and logging in
  2. Sessions and session check security
  3. User information retrieval
  4. Logging out and ending session
  5. Altering existing non-password account information
  6. Deleting accounts
  7. Password hashing
  8. send email automatically to the one on file


This session's addition goal features:
  - ADDED: email password change
  - ADDED: enable https

Bugs & problems:
  -B Can't render login page from failed session_check, must do it in the route
  -B Cookie stores hash, but the cookie needs to be encrypted
  -B Add expiration to cookie, maybe have that number increase when an action happens
  -B File duplicates because of poor relative file referencing
  -P https passphrase is included in https options obj
  -B FIXED: to_account_actions "you are now logged in as, is blank"
  -P enter password to delete account
  -P second password check field is not type password
  -P much better password reset options exist:
     https://security.stackexchange.com/questions/59415/implementing-password-reset-in-a-web-application-by-authtoken-over-email
  -P the UI for the change account setting sucks on too many levels to iterate
  -P many passwords on github, none that I care about

Questions:
  - I've read that the order of the required packages matter, but why and how?



1app.js
  1. install nodemailer, which seems to be the only option even though the docs are scant
  2. create a button on the account actions page that will send the mail hbs
  3. create a route that the button will use
  4. send a test mail from this1234567890is1234567890test@gmail.com to mailinator email
  5. create a form where an email can be input and then sent to on account info
  6. create a space for a token to be input
  7. send an unsecured token
  8. send a unique token
    a. get a token creator
    b. put it in the mailer function
    c. add the token to the mailOptions object
    d. pass it to the session.token object


0app.js
  1. install fs, add as dependency
  2. $ juliantheberge$ openssl req -x509 -newkey rsa:2048 -keyout key.pem -out cert.pem -days 365
  3. Country Name (2 letter code) []:US
    State or Province Name (full name) []:Washington
    Locality Name (eg, city) []:Seattle
    Organization Name (eg, company) []:.
    Organizational Unit Name (eg, section) []:.
    Common Name (eg, fully qualified host name) []:127.0.0.1
    Email Address []:.
    thelionthatiam:form_app juliantheberge$ node app.js
  4. Put the security key in the options for development, because
    _tls_common.js:85
        c.context.setKey(options.key, options.passphrase);
                  ^
  5. chrome says https not secure. true, but I think https is working
    >>success 0app.js<<
